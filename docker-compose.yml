version: '3.8'

services:
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - ${MONGO_PORT}:27017
    networks:
      - MONGO
      - DB2INSERT
    volumes:
      - ${MONGO_DATA_DIR}:/data/db

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: always
    env_file:
      - .env
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: ${MONGO_PORT}
    ports:
      - ${MONGO_EXPRESS_PORT}:8081
    networks:
      - MONGO
    depends_on:
      - mongo

  # proxy:
  #   image: nginx:latest
  #   container_name: proxy
  #   restart: always
  #   ports:
  #     - ${PROXY_PORT}:80
  #   volumes:

  data-lake-insert:
    build:
      context: ./data_lake_insert
      dockerfile: Dockerfile
    command: gunicorn -k uvicorn.workers.UvicornWorker data_lake_insert.main:app
      --bind 0.0.0.0:8000 --workers ${DATA_LAKE_INSERT_WORKERS}
    container_name: data-lake-insert
    restart: always
    env_file:
      - .env
    environment:
      - MONGO_HOST=mongo
    ports:
      - ${DATA_LAKE_INSERT_PORT}:8000
    volumes:
      - ${DATA_LAKE_INSERT_DATA_DIR}:/data
    networks:
      - DB2INSERT
    depends_on:
      - mongo

networks:
  MONGO:
    name: MONGO
  DB2INSERT:
    name: DB2INSERT
    driver: bridge
